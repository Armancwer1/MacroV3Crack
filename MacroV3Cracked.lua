--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=87,68,41,41,99,83,47,66,13,44,13,90,99,96,97,79,95,11,35,53,69,26,93,10,54,43,50,20,86,75,28,55,61,90,76,76,50,30,96,55,22,57,11,96,32,25,48,68,89,51,18,21 while u~=65 do if v<=735 then if v>=422 then if v<=567 then if v<=456 then if v>428 then bz=type v=505 else v=456 br=select end else if v>=546 then if v<560 then do bh=math.abs end v=567 else v=583 bs=math.floor end else v=546 ch=(function(cj,ck,ck)if'number'==bz(cj)then return true else return false end end)end end else if v>=671 then if v<=671 then for cj=0,255 do cc[cj]=bj(cj);end v=715 else if v<733 then v=735 bn=cafunction(cj,ck,ck,ck)return cc[cf(cj,16)]end)else bw={{0,1,2,3,4,5,6,7,8,9,q,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,m,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,r,2,3,0,1,14,o,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,f,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,l,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,c,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,k,12,11,10,9,8,7,6,5,d,3,2,1,0,},nil}v=759 end end else if v<=583 then v=617 bu=(unpack or table.unpack)else if v<635 then cf=tonumber v=642 else v=671 cc={}end end end end else if v<=193 then if v<=108 then if v<105 then v=108 w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil else v=131 bq=string.byte end else if v>=160 then if v>169 then do ca=string.gsub end v=221 else v=193 y=string.sub end else bj=string.char v=160 end end else if v>=325 then if v>=352 then if v>357 then v=422 be=setmetatable else bk=(getfenv or function()return _ENV end)v=401 end else do bo=math.ldexp end v=352 end else if v>=260 then if v>267 then do bf=table.insert end v=325 else cg=table.concat v=292 end else v=260 do bb=string.rep end end end end end else if v<=1070 then if v>=895 then if v>=998 then if v<=998 then bd=1 v=1023 else if v<1067 then bg=function()local c,d,f,k f,k,d,c=bq(bn,bd,(bd+3))do bd=(bd+4);end return((c*16777216)+(d*65536)+(k*p)+f);end v=1070 else v=1094 bt=function()local c do c=bq(bn,bd,bd)end bd=(bd+1);return c;end end end else if v<=895 then v=927 bp=function(c,d,f,k,k)local k,l,m=51,53,93,46,78,70,42,27,14,54,49,12,60 while k~=35 do if l>=153 then if l<=153 then m=(m-m%1)l=196 else if l<207 then l=214 return m else k=35;end end else if l<=53 then m=nil l=82 else if l<115 then m=nil l=122 else m=((d/bi[c])%bi[f])l=153 end end end end end else if v>931 then x=function(c,d,f,k)local k k=((c/2^(d-1))%2^((f-1)-(d-1)+1))return(k-k%1);end v=998 else bv=(bit_lib and bit_lib.bxor or function(c,d)c=c%(2^32)d=d%(2^32)local f,k=0,1 while c>0 and d>0 do local l,m=c%16,d%16 f=f+bw[l+1][m+1]*k c=(c-l)/16 d=(d-m)/16 k=k*16 end f=f+c*k+d*k return f end)v=964 end end end else if v>=811 then if v>=856 then if v<876 then w=2 v=879 else for c=1,s do bi[c]=w w=(w*2)end v=895 end else do bi={[0]=1}end v=856 end else if v>768 then v=811 cd=(2^52)else bc=''v=788 end end end else if v<=1278 then if v>=1192 then if v>=1235 then if v>1238 then cb={}v=1293 else bm=function(...)return{...},br('#',...)end v=1278 end else ba=function(c,c)local c,d,f,k=57,52,42,71,80,62,32,94,97,56,99,68 while c~=37 do if d>=142 then if d>=190 then if d>194 then c=37;else d=225 return f;end else d=190 do bd=(bd+k);end end else if d>=82 then if d<109 then k=bg()d=115 else d=142 f=bn:sub(bd,(bd+k-1))end else d=82 f,k=nil end end end end v=1235 end else if v>1097 then bx=function()local c,d,f,k,l,m,o,p=71,49,56,42,54,45,16,91,73,62,31,23,99,25,16,15,55,93 while c~=42 do if d>=206 then if d>=295 then if d<=295 then if not(o~=0)then if 0~=p then o=1 do k=0 end else return(f*0)end elseif not(o==2047)then else if 0==p then do return(f*(0/0))end else return(f*(1/b))end end d=314 else if d>319 then break else d=362 return(f*(2^(o-1023))*(p/cd+k))end end else if d<=206 then o=bp(20,l,11)d=221 else if d<256 then d=260 p=(bp(0,l,20)*4294967296+m)else d=295 k=1 end end end else if d<=78 then if d<72 then f,k,l,m,o,p=nil d=78 else d=98 m=bg()end else if d<=98 then d=137 l=bg()else if d>140 then d=206 f=((-1)^bp(31,l,1))else if((m==0 and l==0))then return 0 end d=164 end end end end end end v=1192 else bl=function()local b,c do c,b=bq(bn,bd,(bd+2))end bd=(bd+2);return((b*256)+c);end v=1143 end end else if v>=1382 then if v<=1382 then z=function(b,c,d,f,f)local f,k,l,m,o do f=b[123]end k=b[135]o=b[95]do l=by end do m=b[87]end do return function(...)local b,l,p,q,r,s,w,y,bb y=1 l=-1 w=-1 r={}bb={...}b=(br('#',...)-1)p={}do s={}end for w=0,b do if(not(w<m))then do r[(w-m)]=bb[(w+1)];end else s[w]=bb[(w+1)];end;end;do q=(b-m+1)end while true do local q,w,bc,bd,be,bf,bh,bi,bj,bl bj=o[y]bf=bj[57]bc=bj[191]do bi=bj[149]end w=bj[106]bl=bj[110]q=bj[98]bd=bj[161]be=bj[15]bh=bj[11]if not(bf<45)then if not(bj[57]<68)then if not(bf<79)then if not(bf<85)then if not(bf<88)then if not(bf<g)then if(bf>h)then local g g={}do while(#p>0)do for h=1,#p do local h=p[h]for bc=0,#h do local h=h[bc]local bc=h[1]local bn=h[2]if bc==s and bn>=0 then g[bn]=bc[bn]h[1]=g end end end break end end do return false,s[(bi+2)],0;end else y=((s[bi]<s[bl])and bj[15]or y)end else if(not(s[bj[149]]==s[bl]))then do y=be;end end;end else if not(bf<86)then if(bf>86)then do do return s[bd][q]end end else local g,h g=be h=s[g]for bc=(g+1),bl do h=(h..s[bc]);end;s[bi]=h;end else s[bi]=nil;end end else if not(bf>81)then do if not(bf>79)then local g,h do g=bi end h={}do while#p>0 do for bc=1,#p do local bc=p[bc]for bn=0,#bc do local bc=bc[bn]local bn=bc[1]local bo=bc[2]if bn==s and bo>=0 then h[bo]=bn[bo]bc[1]=h end end end break end end return bu(s,g,l);else do if 80==bf then s[bi]=f[be]else for g=bi,be do s[g]=nil;end;end end end end else do if not(bf>82)then y=((f[bj[149]]<s[bl])and be or y)else do if(bj[57]<84)then do s[bi]=by[w]end else local g,h,bc,bn bn=bi bc={s[bn]()}h=bl g=0 do for bo=bn,h do g=(g+1);s[bo]=bc[g];end end end end end end end end else if not(bf>72)then if not(bj[57]>69)then if(bf<69)then f=by[bi](f)else while(s[bi]>=s[bl])do y=be;break end end else if not(bf<71)then if(bf<72)then do if(f[bl]~=s[bj[149]])then y=be;end;end else s[bi]=d[f[be]];end else local g,h,bc bc=bi do g={s[bc](bu(s,bc+1,bj[15]))}end do h=0 end for bn=bc,bl do h=(h+1);s[bn]=g[h];end end end else if not(bj[57]>75)then do if not(bj[57]<74)then if 74==bf then local g,h,bc g=bi bc=s[g]h=s[(g+2)]if((h>0))then do if((bc>s[g+1]))then y=be;else do s[(g+3)]=bc;end end end elseif((bc<s[g+1]))then y=be;else s[(g+3)]=bc;end else local g,h g=bi h=s[be]s[(g+1)]=h;do s[g]=h[f[bl]];end end else local g g=bj[149]do s[g]=s[g](bu(s,g+1,l));end end end else if not(bf<77)then if(bj[57]>77)then local g,h h=bi g=s[be]do s[(h+1)]=g;end s[h]=g[s[bl]];else l=bj[bi];end else if bj[149]then bj[149]=false;bl=bj[15];y=(y-1);else y=(y+be+bl);end end end end end else if not(bf<56)then if not(bf>61)then do if not(bf>58)then if not(bj[57]<57)then do if not(bf~=57)then s[bj[149]]=(0~=be);do y=(y+1);end else do s[bi]=c[bj[15]];end end end else s[bi]=z(k[be],nil,d);end else if not(bf<60)then if(bf>60)then s[bi]=s[be]else s[bi]={};end else s[bi]=(s[be]*s[bl]);end end end else if not(bf<65)then if not(bf<66)then if(bf<67)then s[bj[149]][s[bj[15]]]=s[bl];else s[bj[149]]=(s[be]/s[bj[110]]);end else s[bi]=(s[be]%s[bl]);end else if not(bf<63)then if 63==bf then if not s[bl]then s[bi]=s[bl];y=be;end;else s[bi]=(s[be]*f[bl]);end else local g g=bi do return bu(s,g,(g+be))end;end end end else do if not(bf>49)then if not(bf>46)then if(bf>n)then local g,h,n,bc h=bi g,bc=bm(s[h](bu(s,(h+1),be)))l=(bc+h-1)n=0 for bc=h,l do n=(n+1);s[bc]=g[n];end;else s[bi]=(s[be]+f[bl]);end else if not(bf<48)then if(bj[57]>48)then local g,h do h=bi end g=be for l=h,g do do s[l]=r[(l-h)];end end;else local g g=bi s[g](bu(s,(g+1),be))end elseif((s[bi]>s[bl]))then y=be;end end else do if not(bf<53)then if not(bf>53)then s[bi][f[be]]=f[bl];else if(bf>54)then s[bh]();else y=be;end end else if not(bf>50)then s[bh]=(function()s[bi]=z(k[w],nil,d);end)else if(bf>51)then by[bi]={}else local g,h,l,n,r g=bi l=bl r=(g+2)do n={s[g](s[g+1],s[r])}end do for bc=1,l do do s[(r+bc)]=n[bc]end end end h=s[(g+3)]if h then s[r]=h else y=be;end;end end end end end end end end else if not(bf>21)then if not(bf>i)then if not(bf>4)then if not(bf>1)then do if(bf<1)then s[bi]=(s[be]+s[bl]);else local g,h,i h=bi g=s[h]i=be do for l=1,i do g[l]=s[(h+l)]end;end end end else if not(bf<3)then if(bf<4)then y=((f[bi]~=f[bl])and bj[a]or y)else local a a=bi do return s[a](bu(s,(a+1),be))end;end else d=s[bj[bj[149]]]end end else do if not(bj[57]<8)then if not(bf>8)then do by[bi]=s[w]end else if(bj[57]>9)then do by[bi]=by[w]end else local a a=bi s[a]=s[a](s[a+1]);end end else do if not(bj[57]>5)then o[y]=cb[bj[98]];y=bj[15];else do if(bf<7)then s[bi]=s[be][s[bl]];else s[bh]=(function()s[bi]=z(k[w],nil,d);end)end end end end end end end else if not(bf<16)then do if not(bj[57]<19)then do if not(bj[57]<20)then if(bf>20)then o[y]={[110]=0,[15]=4,[t]=7,[98]=0,[57]=bf- -51};y=(y-1);else local a,g,h,i g=bi a=((bj[110]-1)*50)h=s[g]do i=be end do for k=1,i do do h[(a+k)]=s[(g+k)]end end;end end else s[bj[149]]();end end else if not(bf>16)then do if((f[bi]<s[bj[110]]))then y=bj[e];end;end else if(bf>17)then else do s[bj[149]]=s[be];end end end end end else if not(bf>12)then if(bf>11)then else s[bi]=s[be][f[bl]];end else if not(bj[57]>13)then if not s[bi]then y=bj[15];end;else if not(bf~=14)then s[bj[bi]]=s else do if((s[bi]<s[bl]))then y=be;end;end end end end end end else do if not(bf<33)then do if not(bj[57]>38)then if not(bf>35)then if not(bf<34)then do if(bf>34)then local a a=bi s[a]=s[a](bu(s,a+1,be));else local a a=s[bd][q]s[bd][q]=(a..s[bl]);end end else s={};for a=0,b do if(a<m)then do s[a]=bb[(a+1)];end else break end;end;end else if not(bf<37)then if 37==bf then by=s else do c[be]=s[bi];end end else do return s[bi]end end end else if not(bj[57]>41)then if not(bf>39)then do s[bi]=#s[bj[15]];end else if(bf<41)then s[bi]=by[w]else by[bi]()end end else if not(bf<43)then if 43==bj[57]then do s[bj[149]]=(s[bj[15]]-s[bl]);end else s[bj[149]]=d[f[bj[15]]][f[bl]];end else while s[bi]do y=be;break end end end end end else if not(bf<27)then do if not(bf>29)then if not(bf>27)then local a,b b,a=bm(...)for a=1,bi do s[(a-1)]=b[a]end else if(bf>28)then o[y]=cb[q];y=bj[15];else end end else if not(bf>30)then s[bi]=(s[be]%f[bl]);else if(bf<32)then s[bi]=(not s[be]);else s[bi]=(s[be]/f[bl]);end end end end else if not(bf>23)then if(bf<23)then local a,b b=bi a={}for c=1,#p do local e e=p[c]for c=0,#e do local g,h,i h=e[c]i=h[1]do g=h[2]end if(i==s and g>=b)then a[g]=i[g];h[1]=a;end;end;end;else d[f[be]]=s[bi];end else if not(bf<25)then if(bf<26)then s[bi]=-s[be];else s[bi]=(s[be]^s[bl]);end else local a,b,c c=bi do b=s[(c+2)]end a=(s[c]+b)s[c]=a;if((b>0))then if(not(a>s[c+1]))then y=be;do s[(c+3)]=a;end end elseif(not(a<s[c+1]))then y=be;s[(c+j)]=a;end end end end end end end end do y=(y+1);end end;end;end end v=1405 else if v<1428 then v=1435 return z(ce(bk()),{},bk())();else u=65;end end else if v<=1293 then v=1317 ce=function(a,b,b)local b,c,d,e,f,g,h,i=96,66,70,91,65,73,19,60,74,62,51,10,65,34,20,61,13,37,53,42,84,32,69 while b~=51 do if c>=338 then if c<=419 then if c>=381 then if c<414 then f[135]=e;c=419 else g=bg()c=434 end else if c>347 then c=381 for j=1,bg()do e[j-1]=ce();end else f[87]=bt();c=363 end end else if c>=479 then if c<=479 then c=524 do f[123]=h end else if c>526 then b=51;else c=550 do return f;end end end else if c>437 then for b=1,g do local j,k,l,m=53,70,69,49,38,33,78,50,38,56,27,69,49,80 while j~=42 do if k>=180 then if k<=180 then k=197 do if(not(m~=2))then l=(0~=bt());elseif(3==m)then do l=bx();end elseif(0==m)then l=ba();elseif(4==m)then do l=a[ba()];end end;end else if k>205 then j=42;else k=217 h[b]=l;end end else if k<=70 then l,m=nil k=101 else if k>105 then do l=nil end k=180 else k=137 do m=bt()end end end end end end c=479 else h={}c=457 end end end else if c>=214 then if c>=291 then if c<314 then for a=1,bg()do local b,j,k,l,m,n=68,80,31,85,20,56,36,14,85,29,82,50,75,83,96,92,80,36,99,15,40,82,70,24,24 while b~=41 do if j>=405 then if j>=585 then if j<=615 then if j<606 then n[98]=x(l,12,20);j=615 else n[161]=-n[149]j=660 end else if j>=702 then if j<719 then j=728 do d[a]=n;end else b=41;end else n[11]=-n[110]j=702 end end else if j>=495 then if j>498 then j=585 n[110]=x(l,21,29);else do n[15]=x(m,12,33);end j=539 end else if j<443 then j=447 n[57]=x(m,1,11);else n[149]=x(l,3,11);j=495 end end end else if j>=222 then if j<=239 then if j>228 then j=281 l=bg()else j=239 if not(bt()~=1)then for a=1,bt()do n[166][a]={bt()==0,bg()}end end end else if j<=281 then j=325 m=bg()else if j<366 then k=x(l,1,2)j=373 else j=405 n[155]=k end end end else if j>=154 then if j<192 then n[191]=bt();j=201 else n[166]={};j=222 end else if j>83 then j=154 n={{},nil,nil}else k,l,m,n=nil j=117 end end end end end end c=323 else f[95]=d;c=338 end else if c>223 then for a=(#cb+1),(#cb+i)do local b,j,k,l,m=57,55,33,93,96,12,31,94,81,66,76,68,42,93,52,95,61,37,22,58,48,44,47 while b~=40 do if j>=296 then if j<=383 then if j<=326 then if j<323 then j=326 l[149]=x(k,3,11);else j=343 do l[106]=x(k,12,20);end end else if j<379 then j=383 do l[110]=x(k,21,29);end else j=418 do l[15]=x(m,12,33);end end end else if j>=496 then if j<524 then j=531 cb[a]=l;else break end else if j<445 then j=449 l[161]=-l[149]else j=496 do l[11]=-l[110]end end end end else if j<=126 then if j>=110 then if j<123 then l[191]=bt();j=126 else j=164 k=bg()end else if j<70 then k,l,m=nil j=73 else j=110 l={}end end else if j>=231 then if j>233 then j=296 do l[57]=x(m,1,11);end else j=274 l[155]=x(k,1,2);end else if j<194 then m=bg()j=196 else do l[98]=bt();end j=231 end end end end end end c=291 else c=256 i=bg()end end else if c>=141 then if c>148 then c=214 f={}else c=179 e={}end else if c>74 then c=141 d={}else c=113 d,e,f,g,h,i=nil end end end end end end else if v<1337 then v=1341 by={}else ci={}v=1382 end end end end end end end end)(15,0,1,4,15,2,89,89,10,3,13,2,0,45,15,256,10,5,31,149)